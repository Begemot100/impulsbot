import os
import time
from flask import session
from openai import OpenAI
from dotenv import load_dotenv
from .utils import init_db, save_conversation, load_training_text

load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–µ–∑–∫–∞ –æ–±—É—á–∞—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
TRAINING_TEXT = load_training_text()

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç (–¥–æ 3000 —Ç–æ–∫–µ–Ω–æ–≤!)
SYSTEM_PROMPT = f"""
–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã IMPULS. –û–±—â–∞–π—Å—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç–∏–ª—å –∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–∏–∂–µ. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π –∏ —Å–æ–±–∏—Ä–∞–π –∏–º—è, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª–∏–∫–∏ üòä, –∏–∑–±–µ–≥–∞–π —à–∞–±–ª–æ–Ω–æ–≤ –∏ –ø–æ–≤—Ç–æ—Ä–æ–≤.

---

{TRAINING_TEXT[:10000]}  # –æ–≥—Ä–∞–Ω–∏—á–∏–º —Ç–µ–∫—Å—Ç –¥–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–ª–∏–Ω—ã

---

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
- –•–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å –æ–± —É—Å–ª—É–≥–∞—Ö ‚Äî –æ–±—ä—è—Å–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –ø—Ä–µ–¥–ª–æ–∂–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è
- –£–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ —Ä–µ—à–µ–Ω–∏–µ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
- –ü–∏—à–µ—Ç –≥—Ä—É–±–æ—Å—Ç–∏ ‚Äî –æ—Ç–≤–µ—Ç—å –≤–µ–∂–ª–∏–≤–æ, –Ω–æ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —Å–µ–±–µ
- –£–ø–æ–º–∏–Ω–∞–µ—Ç –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å ‚Äî –ø–æ–∑–¥—Ä–∞–≤—å –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤
"""

class ImpulsAssistant:
    def __init__(self):
        session.setdefault('conversation_history', [{"role": "system", "content": SYSTEM_PROMPT}])
        session.setdefault('language', None)
        session.setdefault('session_id', str(time.time()))

    def save(self):
        session.modified = True

    def process_message(self, msg):
        hist = session['conversation_history']
        hist.append({"role": "user", "content": msg})

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ system + –ø–æ—Å–ª–µ–¥–Ω–∏–µ 19 —Å–æ–æ–±—â–µ–Ω–∏–π
        messages_for_gpt = [hist[0]] + hist[-19:]

        try:
            completion = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=messages_for_gpt,
                max_tokens=500,
                temperature=0.7
            )
            response = completion.choices[0].message.content.strip()
        except Exception as e:
            print(f"GPT Error: {e}")
            response = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç GPT. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        hist.append({"role": "assistant", "content": response})
        session['conversation_history'] = hist
        save_conversation(session['session_id'], msg, response)
        self.save()
        return response